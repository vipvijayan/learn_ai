{"ast":null,"code":"var _jsxFileName = \"/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [isPdfUploaded, setIsPdfUploaded] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n    try {\n      var _ref, _data$response;\n      const endpoint = isPdfUploaded ? 'http://localhost:8000/api/chat' : 'http://localhost:8000/api/legacy-chat';\n      const body = isPdfUploaded ? JSON.stringify({\n        message: prompt,\n        api_key: apiKey\n      }) : JSON.stringify({\n        prompt,\n        api_key: apiKey\n      });\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: body\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setResponse((_ref = (_data$response = data.response) !== null && _data$response !== void 0 ? _data$response : data.detail) !== null && _ref !== void 0 ? _ref : 'No response');\n    } catch (error) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n  const handleFileChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      if (file.type === 'application/pdf') {\n        setSelectedFile(file);\n        setUploadStatus('');\n      } else {\n        setUploadStatus('Please select a PDF file');\n        setSelectedFile(null);\n      }\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile || !apiKey) {\n      setUploadStatus('Please select a PDF file and enter your API key');\n      return;\n    }\n    setUploadStatus('Uploading and processing PDF...');\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('api_key', apiKey);\n      const res = await fetch('http://localhost:8000/api/upload-pdf', {\n        method: 'POST',\n        body: formData\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setUploadStatus(`Successfully uploaded: ${data.filename}`);\n      setIsPdfUploaded(true);\n      setResponse('PDF uploaded successfully! You can now ask questions about the document.');\n    } catch (error) {\n      if (error instanceof Error) {\n        setUploadStatus(`Error: ${error.message}`);\n      } else {\n        setUploadStatus('Unknown error occurred during upload');\n      }\n    }\n  };\n  const checkStatus = async () => {\n    try {\n      const res = await fetch('http://localhost:8000/api/status');\n      const data = await res.json();\n      if (data.status === 'ready') {\n        setIsPdfUploaded(true);\n        setUploadStatus('PDF is ready for questions');\n      } else {\n        setIsPdfUploaded(false);\n        setUploadStatus(data.message || 'No PDF uploaded');\n      }\n    } catch (error) {\n      console.error('Error checking status:', error);\n    }\n  };\n  const handlePromptChange = e => setPrompt(e.target.value);\n  const handleApiKeyChange = e => setApiKey(e.target.value);\n\n  // Check status on component mount\n  React.useEffect(() => {\n    checkStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF RAG Chat System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your OpenAI API key\",\n        value: apiKey,\n        onChange: handleApiKeyChange,\n        style: {\n          width: '100%',\n          padding: '0.5rem',\n          marginBottom: '1rem',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem',\n        padding: '1rem',\n        border: '1px solid #ddd',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload PDF Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: handleFileChange,\n          style: {\n            marginBottom: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleFileUpload,\n          disabled: !selectedFile || !apiKey,\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: selectedFile && apiKey ? '#007bff' : '#ccc',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: selectedFile && apiKey ? 'pointer' : 'not-allowed'\n          },\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0.5rem',\n          backgroundColor: uploadStatus.includes('Error') ? '#f8d7da' : '#d4edda',\n          color: uploadStatus.includes('Error') ? '#721c24' : '#155724',\n          borderRadius: '4px',\n          marginTop: '0.5rem'\n        },\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isPdfUploaded ? 'Chat with PDF Document' : 'Chat with OpenAI (Legacy Mode)'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 4,\n          placeholder: isPdfUploaded ? \"Ask a question about the PDF document...\" : \"Type your message...\",\n          value: prompt,\n          onChange: handlePromptChange,\n          style: {\n            width: '100%',\n            padding: '0.5rem',\n            marginBottom: '1rem',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: isPdfUploaded ? 'Ask Question' : 'Send Message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1rem',\n          backgroundColor: '#f8f9fa',\n          border: '1px solid #dee2e6',\n          borderRadius: '4px',\n          whiteSpace: 'pre-wrap',\n          maxHeight: '400px',\n          overflowY: 'auto'\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rzVM6nHjWWgOtP3nI/vA7gBeSGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","response","setResponse","apiKey","setApiKey","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","isPdfUploaded","setIsPdfUploaded","fileInputRef","handleSubmit","e","preventDefault","_ref","_data$response","endpoint","body","JSON","stringify","message","api_key","res","fetch","method","headers","ok","Error","status","data","json","detail","error","handleFileChange","_e$target$files","file","target","files","type","handleFileUpload","formData","FormData","append","filename","checkStatus","console","handlePromptChange","value","handleApiKeyChange","useEffect","style","padding","fontFamily","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","placeholder","onChange","width","border","borderRadius","ref","accept","onClick","disabled","backgroundColor","color","cursor","includes","marginTop","onSubmit","rows","resize","whiteSpace","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent, useRef } from 'react';\n\ninterface ChatResponse {\n  response?: string;\n  detail?: string;\n}\n\ninterface UploadResponse {\n  message: string;\n  filename: string;\n  status: {\n    is_indexed: boolean;\n    has_context: boolean;\n    context_length: number;\n    vector_count: number;\n  };\n}\n\ninterface StatusResponse {\n  status: string;\n  message?: string;\n  details?: {\n    is_indexed: boolean;\n    has_context: boolean;\n    context_length: number;\n    vector_count: number;\n  };\n}\n\nconst App: React.FC = () => {\n  const [prompt, setPrompt] = useState<string>('');\n  const [response, setResponse] = useState<string>('');\n  const [apiKey, setApiKey] = useState<string>('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [uploadStatus, setUploadStatus] = useState<string>('');\n  const [isPdfUploaded, setIsPdfUploaded] = useState<boolean>(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n\n    try {\n      const endpoint = isPdfUploaded ? 'http://localhost:8000/api/chat' : 'http://localhost:8000/api/legacy-chat';\n      const body = isPdfUploaded \n        ? JSON.stringify({ message: prompt, api_key: apiKey })\n        : JSON.stringify({ prompt, api_key: apiKey });\n\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: body,\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: ChatResponse = await res.json();\n      setResponse(data.response ?? data.detail ?? 'No response');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (file.type === 'application/pdf') {\n        setSelectedFile(file);\n        setUploadStatus('');\n      } else {\n        setUploadStatus('Please select a PDF file');\n        setSelectedFile(null);\n      }\n    }\n  };\n\n  const handleFileUpload = async (): Promise<void> => {\n    if (!selectedFile || !apiKey) {\n      setUploadStatus('Please select a PDF file and enter your API key');\n      return;\n    }\n\n    setUploadStatus('Uploading and processing PDF...');\n\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('api_key', apiKey);\n\n      const res = await fetch('http://localhost:8000/api/upload-pdf', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: UploadResponse = await res.json();\n      setUploadStatus(`Successfully uploaded: ${data.filename}`);\n      setIsPdfUploaded(true);\n      setResponse('PDF uploaded successfully! You can now ask questions about the document.');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setUploadStatus(`Error: ${error.message}`);\n      } else {\n        setUploadStatus('Unknown error occurred during upload');\n      }\n    }\n  };\n\n  const checkStatus = async (): Promise<void> => {\n    try {\n      const res = await fetch('http://localhost:8000/api/status');\n      const data: StatusResponse = await res.json();\n      \n      if (data.status === 'ready') {\n        setIsPdfUploaded(true);\n        setUploadStatus('PDF is ready for questions');\n      } else {\n        setIsPdfUploaded(false);\n        setUploadStatus(data.message || 'No PDF uploaded');\n      }\n    } catch (error) {\n      console.error('Error checking status:', error);\n    }\n  };\n\n  const handlePromptChange = (e: ChangeEvent<HTMLTextAreaElement>) => setPrompt(e.target.value);\n  const handleApiKeyChange = (e: ChangeEvent<HTMLInputElement>) => setApiKey(e.target.value);\n\n  // Check status on component mount\n  React.useEffect(() => {\n    checkStatus();\n  }, []);\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif', maxWidth: '800px', margin: '0 auto' }}>\n      <h1>PDF RAG Chat System</h1>\n      \n      {/* API Key Input */}\n      <div style={{ marginBottom: '2rem' }}>\n        <input\n          type=\"password\"\n          placeholder=\"Enter your OpenAI API key\"\n          value={apiKey}\n          onChange={handleApiKeyChange}\n          style={{ \n            width: '100%', \n            padding: '0.5rem', \n            marginBottom: '1rem',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }}\n        />\n      </div>\n\n      {/* PDF Upload Section */}\n      <div style={{ marginBottom: '2rem', padding: '1rem', border: '1px solid #ddd', borderRadius: '8px' }}>\n        <h3>Upload PDF Document</h3>\n        <div style={{ marginBottom: '1rem' }}>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\".pdf\"\n            onChange={handleFileChange}\n            style={{ marginBottom: '1rem' }}\n          />\n          <button\n            type=\"button\"\n            onClick={handleFileUpload}\n            disabled={!selectedFile || !apiKey}\n            style={{\n              padding: '0.5rem 1rem',\n              backgroundColor: selectedFile && apiKey ? '#007bff' : '#ccc',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: selectedFile && apiKey ? 'pointer' : 'not-allowed'\n            }}\n          >\n            Upload PDF\n          </button>\n        </div>\n        {uploadStatus && (\n          <div style={{ \n            padding: '0.5rem', \n            backgroundColor: uploadStatus.includes('Error') ? '#f8d7da' : '#d4edda',\n            color: uploadStatus.includes('Error') ? '#721c24' : '#155724',\n            borderRadius: '4px',\n            marginTop: '0.5rem'\n          }}>\n            {uploadStatus}\n          </div>\n        )}\n      </div>\n\n      {/* Chat Section */}\n      <div style={{ marginBottom: '2rem' }}>\n        <h3>\n          {isPdfUploaded ? 'Chat with PDF Document' : 'Chat with OpenAI (Legacy Mode)'}\n        </h3>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            rows={4}\n            placeholder={isPdfUploaded ? \"Ask a question about the PDF document...\" : \"Type your message...\"}\n            value={prompt}\n            onChange={handlePromptChange}\n            style={{ \n              width: '100%', \n              padding: '0.5rem',\n              marginBottom: '1rem',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              resize: 'vertical'\n            }}\n          />\n          <button \n            type=\"submit\"\n            style={{\n              padding: '0.5rem 1rem',\n              backgroundColor: '#28a745',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            {isPdfUploaded ? 'Ask Question' : 'Send Message'}\n          </button>\n        </form>\n      </div>\n\n      {/* Response Section */}\n      {response && (\n        <div>\n          <h3>Response:</h3>\n          <div style={{\n            padding: '1rem',\n            backgroundColor: '#f8f9fa',\n            border: '1px solid #dee2e6',\n            borderRadius: '4px',\n            whiteSpace: 'pre-wrap',\n            maxHeight: '400px',\n            overflowY: 'auto'\n          }}>\n            {response}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}