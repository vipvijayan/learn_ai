{"ast":null,"code":"var _jsxFileName = \"/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'https://api-blpcq0w6j-vipin-vijayan-nairs-projects.vercel.app';\nconst App = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n    try {\n      var _ref, _data$response;\n      const res = await fetch(`${API_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          api_key: apiKey\n        })\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setResponse((_ref = (_data$response = data.response) !== null && _data$response !== void 0 ? _data$response : data.detail) !== null && _ref !== void 0 ? _ref : 'No response');\n    } catch (error) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n  const handlePromptChange = e => setPrompt(e.target.value);\n  const handleApiKeyChange = e => setApiKey(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat with OpenAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your OpenAI API key\",\n        value: apiKey,\n        onChange: handleApiKeyChange,\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 4,\n        placeholder: \"Type your message...\",\n        value: prompt,\n        onChange: handlePromptChange,\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Response:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jL9KgkvMSFpq/MRmgSVrCpMBvL0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","prompt","setPrompt","response","setResponse","apiKey","setApiKey","handleSubmit","e","preventDefault","_ref","_data$response","res","fetch","method","headers","body","JSON","stringify","api_key","ok","Error","status","data","json","detail","error","message","handlePromptChange","target","value","handleApiKeyChange","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","width","marginBottom","rows","_c","$RefreshReg$"],"sources":["/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\n\ninterface ChatResponse {\n  response?: string;\n  detail?: string;\n}\n\nconst API_URL = process.env.REACT_APP_API_URL || 'https://api-blpcq0w6j-vipin-vijayan-nairs-projects.vercel.app';\n\nconst App: React.FC = () => {\n  const [prompt, setPrompt] = useState<string>('');\n  const [response, setResponse] = useState<string>('');\n  const [apiKey, setApiKey] = useState<string>('');\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n\n    try {\n      const res = await fetch(`${API_URL}/api/chat`, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({ prompt, api_key: apiKey }),\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: ChatResponse = await res.json();\n      setResponse(data.response ?? data.detail ?? 'No response');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n\n  const handlePromptChange = (e: ChangeEvent<HTMLTextAreaElement>) => setPrompt(e.target.value);\n  const handleApiKeyChange = (e: ChangeEvent<HTMLInputElement>) => setApiKey(e.target.value);\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>\n      <h1>Chat with OpenAI</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your OpenAI API key\"\n          value={apiKey}\n          onChange={handleApiKeyChange}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        />\n        <textarea\n          rows={4}\n          placeholder=\"Type your message...\"\n          value={prompt}\n          onChange={handlePromptChange}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <h3>Response:</h3>\n      <pre>{response}</pre>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}