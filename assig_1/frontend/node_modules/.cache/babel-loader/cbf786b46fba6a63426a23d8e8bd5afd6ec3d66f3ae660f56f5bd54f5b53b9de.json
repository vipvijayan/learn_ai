{"ast":null,"code":"var _jsxFileName = \"/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [isPdfUploaded, setIsPdfUploaded] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Determine API base URL based on environment\n  const getApiBaseUrl = () => {\n    if (process.env.NODE_ENV === 'production') {\n      // In production, use the same domain (Vercel will handle routing)\n      return '';\n    } else {\n      // In development, use localhost\n      return 'http://localhost:8000';\n    }\n  };\n  const API_BASE_URL = getApiBaseUrl();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n    try {\n      var _ref, _data$response;\n      const endpoint = isPdfUploaded ? `${API_BASE_URL}/api/chat` : `${API_BASE_URL}/api/legacy-chat`;\n      const body = isPdfUploaded ? JSON.stringify({\n        message: prompt,\n        api_key: apiKey\n      }) : JSON.stringify({\n        prompt,\n        api_key: apiKey\n      });\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: body\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setResponse((_ref = (_data$response = data.response) !== null && _data$response !== void 0 ? _data$response : data.detail) !== null && _ref !== void 0 ? _ref : 'No response');\n    } catch (error) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n  const handleFileChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      if (file.type === 'application/pdf') {\n        setSelectedFile(file);\n        setUploadStatus('');\n      } else {\n        setUploadStatus('Please select a PDF file');\n        setSelectedFile(null);\n      }\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile || !apiKey) {\n      setUploadStatus('Please select a PDF file and enter your API key');\n      return;\n    }\n    console.log('Selected file:', selectedFile);\n    console.log('File type:', selectedFile.type);\n    console.log('File name:', selectedFile.name);\n    console.log('File size:', selectedFile.size);\n    setUploadStatus('Uploading and processing PDF...');\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('api_key', apiKey);\n      console.log('FormData entries:');\n      // Convert FormData to array for debugging\n      const formDataArray = Array.from(formData.entries());\n      formDataArray.forEach(([key, value]) => {\n        console.log(key, value);\n      });\n      const res = await fetch(`${API_BASE_URL}/api/upload-pdf`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setUploadStatus(`Successfully uploaded: ${data.filename}`);\n      setIsPdfUploaded(true);\n      setResponse('PDF uploaded successfully! You can now ask questions about the document.');\n    } catch (error) {\n      if (error instanceof Error) {\n        setUploadStatus(`Error: ${error.message}`);\n      } else {\n        setUploadStatus('Unknown error occurred during upload');\n      }\n    }\n  };\n  const checkStatus = useCallback(async () => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/api/status`);\n      const data = await res.json();\n      if (data.status === 'ready') {\n        setIsPdfUploaded(true);\n        setUploadStatus('PDF is ready for questions');\n      } else {\n        setIsPdfUploaded(false);\n        setUploadStatus(data.message || 'No PDF uploaded');\n      }\n    } catch (error) {\n      console.error('Error checking status:', error);\n    }\n  }, [API_BASE_URL]);\n  const handlePromptChange = e => setPrompt(e.target.value);\n  const handleApiKeyChange = e => setApiKey(e.target.value);\n\n  // Check status on component mount\n  useEffect(() => {\n    checkStatus();\n  }, [checkStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF RAG Chat System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your OpenAI API key\",\n        value: apiKey,\n        onChange: handleApiKeyChange,\n        style: {\n          width: '100%',\n          padding: '0.5rem',\n          marginBottom: '1rem',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem',\n        padding: '1rem',\n        border: '1px solid #ddd',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload PDF Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: handleFileChange,\n          style: {\n            marginBottom: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleFileUpload,\n          disabled: !selectedFile || !apiKey,\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: selectedFile && apiKey ? '#007bff' : '#ccc',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: selectedFile && apiKey ? 'pointer' : 'not-allowed'\n          },\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0.5rem',\n          backgroundColor: uploadStatus.includes('Error') ? '#f8d7da' : '#d4edda',\n          color: uploadStatus.includes('Error') ? '#721c24' : '#155724',\n          borderRadius: '4px',\n          marginTop: '0.5rem'\n        },\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isPdfUploaded ? 'Chat with PDF Document' : 'Chat with OpenAI (Legacy Mode)'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 4,\n          placeholder: isPdfUploaded ? \"Ask a question about the PDF document...\" : \"Type your message...\",\n          value: prompt,\n          onChange: handlePromptChange,\n          style: {\n            width: '100%',\n            padding: '0.5rem',\n            marginBottom: '1rem',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: '0.5rem 1rem',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: isPdfUploaded ? 'Ask Question' : 'Send Message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1rem',\n          backgroundColor: '#f8f9fa',\n          border: '1px solid #dee2e6',\n          borderRadius: '4px',\n          whiteSpace: 'pre-wrap',\n          maxHeight: '400px',\n          overflowY: 'auto'\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LFHKA4G89oh3Bfb5tz9u0ztVdeE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","response","setResponse","apiKey","setApiKey","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","isPdfUploaded","setIsPdfUploaded","fileInputRef","getApiBaseUrl","process","env","NODE_ENV","API_BASE_URL","handleSubmit","e","preventDefault","_ref","_data$response","endpoint","body","JSON","stringify","message","api_key","res","fetch","method","headers","ok","Error","status","data","json","detail","error","handleFileChange","_e$target$files","file","target","files","type","handleFileUpload","console","log","name","size","formData","FormData","append","formDataArray","Array","from","entries","forEach","key","value","filename","checkStatus","handlePromptChange","handleApiKeyChange","style","padding","fontFamily","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","placeholder","onChange","width","border","borderRadius","ref","accept","onClick","disabled","backgroundColor","color","cursor","includes","marginTop","onSubmit","rows","resize","whiteSpace","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent, useRef, useCallback, useEffect } from 'react';\n\ninterface ChatResponse {\n  response?: string;\n  detail?: string;\n}\n\ninterface UploadResponse {\n  message: string;\n  filename: string;\n  status: {\n    is_indexed: boolean;\n    has_context: boolean;\n    context_length: number;\n    vector_count: number;\n  };\n}\n\ninterface StatusResponse {\n  status: string;\n  message?: string;\n  details?: {\n    is_indexed: boolean;\n    has_context: boolean;\n    context_length: number;\n    vector_count: number;\n  };\n}\n\nconst App: React.FC = () => {\n  const [prompt, setPrompt] = useState<string>('');\n  const [response, setResponse] = useState<string>('');\n  const [apiKey, setApiKey] = useState<string>('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [uploadStatus, setUploadStatus] = useState<string>('');\n  const [isPdfUploaded, setIsPdfUploaded] = useState<boolean>(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Determine API base URL based on environment\n  const getApiBaseUrl = () => {\n    if (process.env.NODE_ENV === 'production') {\n      // In production, use the same domain (Vercel will handle routing)\n      return '';\n    } else {\n      // In development, use localhost\n      return 'http://localhost:8000';\n    }\n  };\n\n  const API_BASE_URL = getApiBaseUrl();\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n\n    try {\n      const endpoint = isPdfUploaded ? `${API_BASE_URL}/api/chat` : `${API_BASE_URL}/api/legacy-chat`;\n      const body = isPdfUploaded \n        ? JSON.stringify({ message: prompt, api_key: apiKey })\n        : JSON.stringify({ prompt, api_key: apiKey });\n\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: body,\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: ChatResponse = await res.json();\n      setResponse(data.response ?? data.detail ?? 'No response');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (file.type === 'application/pdf') {\n        setSelectedFile(file);\n        setUploadStatus('');\n      } else {\n        setUploadStatus('Please select a PDF file');\n        setSelectedFile(null);\n      }\n    }\n  };\n\n  const handleFileUpload = async (): Promise<void> => {\n    if (!selectedFile || !apiKey) {\n      setUploadStatus('Please select a PDF file and enter your API key');\n      return;\n    }\n\n    console.log('Selected file:', selectedFile);\n    console.log('File type:', selectedFile.type);\n    console.log('File name:', selectedFile.name);\n    console.log('File size:', selectedFile.size);\n\n    setUploadStatus('Uploading and processing PDF...');\n\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('api_key', apiKey);\n\n      console.log('FormData entries:');\n      // Convert FormData to array for debugging\n      const formDataArray = Array.from(formData.entries());\n      formDataArray.forEach(([key, value]) => {\n        console.log(key, value);\n      });\n\n      const res = await fetch(`${API_BASE_URL}/api/upload-pdf`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: UploadResponse = await res.json();\n      setUploadStatus(`Successfully uploaded: ${data.filename}`);\n      setIsPdfUploaded(true);\n      setResponse('PDF uploaded successfully! You can now ask questions about the document.');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setUploadStatus(`Error: ${error.message}`);\n      } else {\n        setUploadStatus('Unknown error occurred during upload');\n      }\n    }\n  };\n\n  const checkStatus = useCallback(async (): Promise<void> => {\n    try {\n      const res = await fetch(`${API_BASE_URL}/api/status`);\n      const data: StatusResponse = await res.json();\n      \n      if (data.status === 'ready') {\n        setIsPdfUploaded(true);\n        setUploadStatus('PDF is ready for questions');\n      } else {\n        setIsPdfUploaded(false);\n        setUploadStatus(data.message || 'No PDF uploaded');\n      }\n    } catch (error) {\n      console.error('Error checking status:', error);\n    }\n  }, [API_BASE_URL]);\n\n  const handlePromptChange = (e: ChangeEvent<HTMLTextAreaElement>) => setPrompt(e.target.value);\n  const handleApiKeyChange = (e: ChangeEvent<HTMLInputElement>) => setApiKey(e.target.value);\n\n  // Check status on component mount\n  useEffect(() => {\n    checkStatus();\n  }, [checkStatus]);\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif', maxWidth: '800px', margin: '0 auto' }}>\n      <h1>PDF RAG Chat System</h1>\n      \n      {/* API Key Input */}\n      <div style={{ marginBottom: '2rem' }}>\n        <input\n          type=\"password\"\n          placeholder=\"Enter your OpenAI API key\"\n          value={apiKey}\n          onChange={handleApiKeyChange}\n          style={{ \n            width: '100%', \n            padding: '0.5rem', \n            marginBottom: '1rem',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }}\n        />\n      </div>\n\n      {/* PDF Upload Section */}\n      <div style={{ marginBottom: '2rem', padding: '1rem', border: '1px solid #ddd', borderRadius: '8px' }}>\n        <h3>Upload PDF Document</h3>\n        <div style={{ marginBottom: '1rem' }}>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\".pdf\"\n            onChange={handleFileChange}\n            style={{ marginBottom: '1rem' }}\n          />\n          <button\n            type=\"button\"\n            onClick={handleFileUpload}\n            disabled={!selectedFile || !apiKey}\n            style={{\n              padding: '0.5rem 1rem',\n              backgroundColor: selectedFile && apiKey ? '#007bff' : '#ccc',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: selectedFile && apiKey ? 'pointer' : 'not-allowed'\n            }}\n          >\n            Upload PDF\n          </button>\n        </div>\n        {uploadStatus && (\n          <div style={{ \n            padding: '0.5rem', \n            backgroundColor: uploadStatus.includes('Error') ? '#f8d7da' : '#d4edda',\n            color: uploadStatus.includes('Error') ? '#721c24' : '#155724',\n            borderRadius: '4px',\n            marginTop: '0.5rem'\n          }}>\n            {uploadStatus}\n          </div>\n        )}\n      </div>\n\n      {/* Chat Section */}\n      <div style={{ marginBottom: '2rem' }}>\n        <h3>\n          {isPdfUploaded ? 'Chat with PDF Document' : 'Chat with OpenAI (Legacy Mode)'}\n        </h3>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            rows={4}\n            placeholder={isPdfUploaded ? \"Ask a question about the PDF document...\" : \"Type your message...\"}\n            value={prompt}\n            onChange={handlePromptChange}\n            style={{ \n              width: '100%', \n              padding: '0.5rem',\n              marginBottom: '1rem',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              resize: 'vertical'\n            }}\n          />\n          <button \n            type=\"submit\"\n            style={{\n              padding: '0.5rem 1rem',\n              backgroundColor: '#28a745',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            {isPdfUploaded ? 'Ask Question' : 'Send Message'}\n          </button>\n        </form>\n      </div>\n\n      {/* Response Section */}\n      {response && (\n        <div>\n          <h3>Response:</h3>\n          <div style={{\n            padding: '1rem',\n            backgroundColor: '#f8f9fa',\n            border: '1px solid #dee2e6',\n            borderRadius: '4px',\n            whiteSpace: 'pre-wrap',\n            maxHeight: '400px',\n            overflowY: 'auto'\n          }}>\n            {response}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}