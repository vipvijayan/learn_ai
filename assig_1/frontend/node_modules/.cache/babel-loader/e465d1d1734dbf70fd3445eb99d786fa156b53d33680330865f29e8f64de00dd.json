{"ast":null,"code":"var _jsxFileName = \"/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [isPdfUploaded, setIsPdfUploaded] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n    try {\n      var _ref, _data$response;\n      const endpoint = isPdfUploaded ? '/api/chat' : '/api/legacy-chat';\n      const body = isPdfUploaded ? JSON.stringify({\n        message: prompt,\n        api_key: apiKey\n      }) : JSON.stringify({\n        prompt,\n        api_key: apiKey\n      });\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: body\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setResponse((_ref = (_data$response = data.response) !== null && _data$response !== void 0 ? _data$response : data.detail) !== null && _ref !== void 0 ? _ref : 'No response');\n    } catch (error) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n  const handleFileChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      if (file.type === 'application/pdf') {\n        setSelectedFile(file);\n        setUploadStatus('');\n      } else {\n        setUploadStatus('Please select a PDF file');\n        setSelectedFile(null);\n      }\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile || !apiKey) {\n      setUploadStatus('Please select a PDF file and enter your API key');\n      return;\n    }\n    setUploadStatus('Uploading and processing PDF...');\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('api_key', apiKey);\n      const res = await fetch('/api/upload-pdf', {\n        method: 'POST',\n        body: formData\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      setUploadStatus(`Successfully uploaded: ${data.filename}`);\n      setIsPdfUploaded(true);\n      setResponse('PDF uploaded successfully! You can now ask questions about the document.');\n    } catch (error) {\n      if (error instanceof Error) {\n        setUploadStatus(`Error: ${error.message}`);\n      } else {\n        setUploadStatus('Unknown error occurred during upload');\n      }\n    }\n  };\n  const checkStatus = async () => {\n    try {\n      const res = await fetch('/api/status');\n      const data = await res.json();\n      if (data.status === 'ready') {\n        setIsPdfUploaded(true);\n        setUploadStatus('PDF is ready for questions');\n      } else {\n        setIsPdfUploaded(false);\n        setUploadStatus(data.message || 'No PDF uploaded');\n      }\n    } catch (error) {\n      console.error('Error checking status:', error);\n    }\n  };\n  const handlePromptChange = e => setPrompt(e.target.value);\n  const handleApiKeyChange = e => setApiKey(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat with OpenAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your OpenAI API key\",\n        value: apiKey,\n        onChange: handleApiKeyChange,\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 4,\n        placeholder: \"Type your message...\",\n        value: prompt,\n        onChange: handlePromptChange,\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Response:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"A4uxKf+MBSZwhjNgcxbxSOaqWOg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","response","setResponse","apiKey","setApiKey","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","isPdfUploaded","setIsPdfUploaded","fileInputRef","handleSubmit","e","preventDefault","_ref","_data$response","endpoint","body","JSON","stringify","message","api_key","res","fetch","method","headers","ok","Error","status","data","json","detail","error","handleFileChange","_e$target$files","file","target","files","type","handleFileUpload","formData","FormData","append","filename","checkStatus","console","handlePromptChange","value","handleApiKeyChange","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","width","marginBottom","rows","_c","$RefreshReg$"],"sources":["/Users/vipinvijayan/Developer/projects/AI/AIMakerSpace/code/The-AI-Engineer-Challenge/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent, useRef } from 'react';\n\ninterface ChatResponse {\n  response?: string;\n  detail?: string;\n}\n\ninterface UploadResponse {\n  message: string;\n  filename: string;\n  status: {\n    is_indexed: boolean;\n    has_context: boolean;\n    context_length: number;\n    vector_count: number;\n  };\n}\n\ninterface StatusResponse {\n  status: string;\n  message?: string;\n  details?: {\n    is_indexed: boolean;\n    has_context: boolean;\n    context_length: number;\n    vector_count: number;\n  };\n}\n\nconst App: React.FC = () => {\n  const [prompt, setPrompt] = useState<string>('');\n  const [response, setResponse] = useState<string>('');\n  const [apiKey, setApiKey] = useState<string>('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [uploadStatus, setUploadStatus] = useState<string>('');\n  const [isPdfUploaded, setIsPdfUploaded] = useState<boolean>(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setResponse(\"Loading...\");\n\n    try {\n      const endpoint = isPdfUploaded ? '/api/chat' : '/api/legacy-chat';\n      const body = isPdfUploaded \n        ? JSON.stringify({ message: prompt, api_key: apiKey })\n        : JSON.stringify({ prompt, api_key: apiKey });\n\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: body,\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: ChatResponse = await res.json();\n      setResponse(data.response ?? data.detail ?? 'No response');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setResponse(`Error: ${error.message}`);\n      } else {\n        setResponse('Unknown error occurred.');\n      }\n    }\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (file.type === 'application/pdf') {\n        setSelectedFile(file);\n        setUploadStatus('');\n      } else {\n        setUploadStatus('Please select a PDF file');\n        setSelectedFile(null);\n      }\n    }\n  };\n\n  const handleFileUpload = async (): Promise<void> => {\n    if (!selectedFile || !apiKey) {\n      setUploadStatus('Please select a PDF file and enter your API key');\n      return;\n    }\n\n    setUploadStatus('Uploading and processing PDF...');\n\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('api_key', apiKey);\n\n      const res = await fetch('/api/upload-pdf', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n\n      const data: UploadResponse = await res.json();\n      setUploadStatus(`Successfully uploaded: ${data.filename}`);\n      setIsPdfUploaded(true);\n      setResponse('PDF uploaded successfully! You can now ask questions about the document.');\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setUploadStatus(`Error: ${error.message}`);\n      } else {\n        setUploadStatus('Unknown error occurred during upload');\n      }\n    }\n  };\n\n  const checkStatus = async (): Promise<void> => {\n    try {\n      const res = await fetch('/api/status');\n      const data: StatusResponse = await res.json();\n      \n      if (data.status === 'ready') {\n        setIsPdfUploaded(true);\n        setUploadStatus('PDF is ready for questions');\n      } else {\n        setIsPdfUploaded(false);\n        setUploadStatus(data.message || 'No PDF uploaded');\n      }\n    } catch (error) {\n      console.error('Error checking status:', error);\n    }\n  };\n\n  const handlePromptChange = (e: ChangeEvent<HTMLTextAreaElement>) => setPrompt(e.target.value);\n  const handleApiKeyChange = (e: ChangeEvent<HTMLInputElement>) => setApiKey(e.target.value);\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>\n      <h1>Chat with OpenAI</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your OpenAI API key\"\n          value={apiKey}\n          onChange={handleApiKeyChange}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        />\n        <textarea\n          rows={4}\n          placeholder=\"Type your message...\"\n          value={prompt}\n          onChange={handlePromptChange}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <h3>Response:</h3>\n      <pre>{response}</pre>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAA0BC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA6BxE,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EAClE,MAAMkB,YAAY,GAAGjB,MAAM,CAAmB,IAAI,CAAC;EAEnD,MAAMkB,YAAY,GAAG,MAAOC,CAA6B,IAAoB;IAC3EA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBZ,WAAW,CAAC,YAAY,CAAC;IAEzB,IAAI;MAAA,IAAAa,IAAA,EAAAC,cAAA;MACF,MAAMC,QAAQ,GAAGR,aAAa,GAAG,WAAW,GAAG,kBAAkB;MACjE,MAAMS,IAAI,GAAGT,aAAa,GACtBU,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEtB,MAAM;QAAEuB,OAAO,EAAEnB;MAAO,CAAC,CAAC,GACpDgB,IAAI,CAACC,SAAS,CAAC;QAAErB,MAAM;QAAEuB,OAAO,EAAEnB;MAAO,CAAC,CAAC;MAE/C,MAAMoB,GAAG,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;QAChCQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACZ,CAAC;QACDR,IAAI,EAAEA;MACR,CAAC,CAAC;MAEF,IAAI,CAACK,GAAG,CAACI,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,GAAG,CAACM,MAAM,EAAE,CAAC;MACtD;MAEA,MAAMC,IAAkB,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC3C7B,WAAW,EAAAa,IAAA,IAAAC,cAAA,GAACc,IAAI,CAAC7B,QAAQ,cAAAe,cAAA,cAAAA,cAAA,GAAIc,IAAI,CAACE,MAAM,cAAAjB,IAAA,cAAAA,IAAA,GAAI,aAAa,CAAC;IAC5D,CAAC,CAAC,OAAOkB,KAAc,EAAE;MACvB,IAAIA,KAAK,YAAYL,KAAK,EAAE;QAC1B1B,WAAW,CAAC,UAAU+B,KAAK,CAACZ,OAAO,EAAE,CAAC;MACxC,CAAC,MAAM;QACLnB,WAAW,CAAC,yBAAyB,CAAC;MACxC;IACF;EACF,CAAC;EAED,MAAMgC,gBAAgB,GAAIrB,CAAgC,IAAK;IAAA,IAAAsB,eAAA;IAC7D,MAAMC,IAAI,IAAAD,eAAA,GAAGtB,CAAC,CAACwB,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAIC,IAAI,EAAE;MACR,IAAIA,IAAI,CAACG,IAAI,KAAK,iBAAiB,EAAE;QACnCjC,eAAe,CAAC8B,IAAI,CAAC;QACrB5B,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACLA,eAAe,CAAC,0BAA0B,CAAC;QAC3CF,eAAe,CAAC,IAAI,CAAC;MACvB;IACF;EACF,CAAC;EAED,MAAMkC,gBAAgB,GAAG,MAAAA,CAAA,KAA2B;IAClD,IAAI,CAACnC,YAAY,IAAI,CAACF,MAAM,EAAE;MAC5BK,eAAe,CAAC,iDAAiD,CAAC;MAClE;IACF;IAEAA,eAAe,CAAC,iCAAiC,CAAC;IAElD,IAAI;MACF,MAAMiC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtC,YAAY,CAAC;MACrCoC,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAExC,MAAM,CAAC;MAElC,MAAMoB,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdP,IAAI,EAAEuB;MACR,CAAC,CAAC;MAEF,IAAI,CAAClB,GAAG,CAACI,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,GAAG,CAACM,MAAM,EAAE,CAAC;MACtD;MAEA,MAAMC,IAAoB,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7CvB,eAAe,CAAC,0BAA0BsB,IAAI,CAACc,QAAQ,EAAE,CAAC;MAC1DlC,gBAAgB,CAAC,IAAI,CAAC;MACtBR,WAAW,CAAC,0EAA0E,CAAC;IACzF,CAAC,CAAC,OAAO+B,KAAc,EAAE;MACvB,IAAIA,KAAK,YAAYL,KAAK,EAAE;QAC1BpB,eAAe,CAAC,UAAUyB,KAAK,CAACZ,OAAO,EAAE,CAAC;MAC5C,CAAC,MAAM;QACLb,eAAe,CAAC,sCAAsC,CAAC;MACzD;IACF;EACF,CAAC;EAED,MAAMqC,WAAW,GAAG,MAAAA,CAAA,KAA2B;IAC7C,IAAI;MACF,MAAMtB,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MACtC,MAAMM,IAAoB,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAE7C,IAAID,IAAI,CAACD,MAAM,KAAK,OAAO,EAAE;QAC3BnB,gBAAgB,CAAC,IAAI,CAAC;QACtBF,eAAe,CAAC,4BAA4B,CAAC;MAC/C,CAAC,MAAM;QACLE,gBAAgB,CAAC,KAAK,CAAC;QACvBF,eAAe,CAACsB,IAAI,CAACT,OAAO,IAAI,iBAAiB,CAAC;MACpD;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMc,kBAAkB,GAAIlC,CAAmC,IAAKb,SAAS,CAACa,CAAC,CAACwB,MAAM,CAACW,KAAK,CAAC;EAC7F,MAAMC,kBAAkB,GAAIpC,CAAgC,IAAKT,SAAS,CAACS,CAAC,CAACwB,MAAM,CAACW,KAAK,CAAC;EAE1F,oBACEpD,OAAA;IAAKsD,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAa,CAAE;IAAAC,QAAA,gBACxDzD,OAAA;MAAAyD,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB7D,OAAA;MAAM8D,QAAQ,EAAE9C,YAAa;MAAAyC,QAAA,gBAC3BzD,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXoB,WAAW,EAAC,2BAA2B;QACvCX,KAAK,EAAE7C,MAAO;QACdyD,QAAQ,EAAEX,kBAAmB;QAC7BC,KAAK,EAAE;UAAEW,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF7D,OAAA;QACEmE,IAAI,EAAE,CAAE;QACRJ,WAAW,EAAC,sBAAsB;QAClCX,KAAK,EAAEjD,MAAO;QACd6D,QAAQ,EAAEb,kBAAmB;QAC7BG,KAAK,EAAE;UAAEW,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF7D,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAAAc,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACP7D,OAAA;MAAAyD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB7D,OAAA;MAAAyD,QAAA,EAAMpD;IAAQ;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAvIID,GAAa;AAAAmE,EAAA,GAAbnE,GAAa;AAyInB,eAAeA,GAAG;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}